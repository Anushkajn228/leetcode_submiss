class Solution {
public:
    void solve(int ind, vector<int>&ds, vector<vector<int>>&ans,vector<int>& candidates, int target,int n){

        if(ind==n){
            if(target==0){
            ans.push_back(ds);
            
        }
        return;
    }
    if(candidates[ind]<=target){

    ds.push_back(candidates[ind]);
    solve(ind,ds,ans,candidates,target-candidates[ind],n);

    ds.pop_back();
    }
    solve(ind+1,ds,ans,candidates,target,n);

    }
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<vector<int>>ans;
        vector<int>ds;
        int n=candidates.size();
        
        solve(0,ds,ans,candidates,target,n);
        return ans;
        
    }
};
